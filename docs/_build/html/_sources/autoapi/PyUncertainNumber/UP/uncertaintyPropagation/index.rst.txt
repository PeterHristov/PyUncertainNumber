PyUncertainNumber.UP.uncertaintyPropagation
===========================================

.. py:module:: PyUncertainNumber.UP.uncertaintyPropagation


Functions
---------

.. autoapisummary::

   PyUncertainNumber.UP.uncertaintyPropagation.up_bb
   PyUncertainNumber.UP.uncertaintyPropagation.main


Module Contents
---------------

.. py:function:: up_bb(vars, fun, n: numpy.integer = None, x0: numpy.ndarray = None, method='endpoint', save_raw_data='no', *, base_path=np.nan, tol_loc: numpy.ndarray = None, options_loc: dict = None, method_loc='Nelder-Mead', objective='minimize', pop_size=1000, n_gen=100, tol=0.001, n_gen_last=10, algorithm_type='NSGA2', **kwargs)

   Performs uncertainty propagation (UP) using various methods.

   :param vars: Input intervals.
   :type vars: np.ndarray or list of UN objects
   :param fun: The function to propagate.
   :type fun: Callable
   :param n: Number of subintervals/samples. Defaults to None.
   :type n: np.integer, optional
   :param method: UP method. Defaults to "endpoint".
   :type method: str, optional
   :param save_raw_data: Whether to save raw data. Defaults to "no".
   :type save_raw_data: str, optional
   :param base_path: Path for results. Defaults to np.nan.
   :type base_path: str, optional
   :param x0: Initial guess for local optimization.
   :type x0: np.array, optional
   :param objective: Optimization objective. Defaults to 'minimize'.
   :type objective: str, optional
   :param pop_size: Population size for genetic algorithm. Defaults to 1000.
   :type pop_size: int, optional
   :param n_gen: Number of generations for genetic algorithm. Defaults to 100.
   :type n_gen: int, optional
   :param tol: Tolerance for genetic algorithm. Defaults to 1e-3.
   :type tol: float, optional
   :param n_gen_last: Generations for last population. Defaults to 10.
   :type n_gen_last: int, optional
   :param algorithm_type: Genetic algorithm type. Defaults to "NSGA2".
   :type algorithm_type: str, optional

   :returns: Results of the UP method.
   :rtype: tuple

   :raises ValueError: For invalid method, save_raw_data, or missing arguments.
   :raises #TODO update the description.:
   :raises #TODO update the genetic optimisation technique to do both minimisation nad optimisation at the same time.:
   :raises # TODO return either as namedTuple or dict to be explicit:


.. py:function:: main()

   (Ioanna style) implementation of the vertex method on the cantilever beam example


